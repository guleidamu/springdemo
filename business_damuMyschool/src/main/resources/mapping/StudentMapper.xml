<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.damuMyschool.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.example.damuMyschool.data.entity.Student">
    <id column="studentNo" jdbcType="INTEGER" property="studentno" />
    <result column="loginPwd" jdbcType="VARCHAR" property="loginpwd" />
    <result column="studentName" jdbcType="VARCHAR" property="studentname" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="gradeId" jdbcType="INTEGER" property="gradeid" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="bornDate" jdbcType="TIMESTAMP" property="borndate" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="identityCard" jdbcType="VARCHAR" property="identitycard" />
  </resultMap>
  <sql id="Base_Column_List">
    studentNo, loginPwd, studentName, sex, gradeId, phone, address, bornDate, email, 
    identityCard
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where studentNo = #{studentno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where studentNo = #{studentno,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.damuMyschool.data.entity.Student">
    insert into student (studentNo, loginPwd, studentName, 
      sex, gradeId, phone, address, 
      bornDate, email, identityCard
      )
    values (#{studentno,jdbcType=INTEGER}, #{loginpwd,jdbcType=VARCHAR}, #{studentname,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{gradeid,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{borndate,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}, #{identitycard,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.damuMyschool.data.entity.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentno != null">
        studentNo,
      </if>
      <if test="loginpwd != null">
        loginPwd,
      </if>
      <if test="studentname != null">
        studentName,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="gradeid != null">
        gradeId,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="borndate != null">
        bornDate,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="identitycard != null">
        identityCard,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentno != null">
        #{studentno,jdbcType=INTEGER},
      </if>
      <if test="loginpwd != null">
        #{loginpwd,jdbcType=VARCHAR},
      </if>
      <if test="studentname != null">
        #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="gradeid != null">
        #{gradeid,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="borndate != null">
        #{borndate,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="identitycard != null">
        #{identitycard,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.damuMyschool.data.entity.Student">
    update student
    <set>
      <if test="loginpwd != null">
        loginPwd = #{loginpwd,jdbcType=VARCHAR},
      </if>
      <if test="studentname != null">
        studentName = #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="gradeid != null">
        gradeId = #{gradeid,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="borndate != null">
        bornDate = #{borndate,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="identitycard != null">
        identityCard = #{identitycard,jdbcType=VARCHAR},
      </if>
    </set>
    where studentNo = #{studentno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.damuMyschool.data.entity.Student">
    update student
    set loginPwd = #{loginpwd,jdbcType=VARCHAR},
      studentName = #{studentname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      gradeId = #{gradeid,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      bornDate = #{borndate,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR},
      identityCard = #{identitycard,jdbcType=VARCHAR}
    where studentNo = #{studentno,jdbcType=INTEGER}
  </update>

</mapper>